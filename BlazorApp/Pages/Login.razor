@page "/login"
@inject Services.AuthService AuthService
@inject NavigationManager NavigationManager

<div class="login-container">
    <div class="card">
        <center><h3>Login</h3></center>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="loginModel.Email" class="form-control" placeholder="Enter your email" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText type="password" id="password" @bind-Value="loginModel.Password" class="form-control" placeholder="Enter your password" />
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
        </EditForm>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            var session = await AuthService.SignIn(loginModel.Email, loginModel.Password);
            if (session != null)
            {
                NavigationManager.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}